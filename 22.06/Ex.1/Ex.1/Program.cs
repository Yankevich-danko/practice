using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ex._1
{
    class Program
    {
        struct words
        {
            public string word;
            public string meaning;

            public words(string word, string meaning)
            {
                this.word = word;
                this.meaning = meaning;
            }
        }

        static void Main(string[] args)
        {
            List<words> ls = new List<words>();


            ls.Add(new words("Абдоминопластика", "Косметическая операция в области живота, формирование талии."));
            ls.Add(new words("Абстрагирование", "Размышление, отвлеченное от конкретных явлений и предметов с целью выявления их существенных признаков."));
            ls.Add(new words("Автаркия", "Замкнутая на себя самодостаточная экономическая модель государства или региона."));
            ls.Add(new words("Агиография", "Церковное жизнеописание святой персоны."));
            ls.Add(new words("Агломерация", "Объединение мелких частей в единое целое."));
            ls.Add(new words("Имплементация", "Выполнение международных обязательств на внутригосударственном уровне."));
            ls.Add(new words("Декаденство", "Определённое умонастроение, кризисный тип сознания, который выражается в чувстве отчаяния, бессилия, душевной усталости. С ним связаны неприятие окружающего мира, пессимизм, осознание себя носителем высокой, но гибнующей культуры."));
            ls.Add(new words("Бастион", "укрепление, выступающее над углом крепостной ограды."));
            ls.Add(new words("Вестверк", "западная часть каролингского или романского храма, обычно состоящая из зала при входе и открывающаяся в неф галереями и капеллами на хорах. Фасад вест-верка часто фланкирован башнями."));
            ls.Add(new words("Гризайль", "монохромная живопись, часто имитирующая скульптурный рельеф."));
            ls.Add(new words("Иконография", "система символов, лежащая в основе того или иного произведения искусства."));
            ls.Add(new words("Квадрифолий", "«четырехлистник», декоративный элемент в виде равноконечного креста с округлыми лопастями («листьями»)."));
            ls.Add(new words("Контрапост", "в изобразительном искусстве: поза, характеризующаяся контрастным расположением симметричных или противостоящих друг другу частей человеческого тела (рук, ног, верхней и нижней половины тела)."));
            ls.Add(new words("Лантерна", "небольшая башенка с оконными проемами на вершине купола, служащая для освещения подкупольного пространства."));
            ls.Add(new words("фельдъегерь", "Военный или правительственный курьер, нарочный в некоторых армиях - член военной полиции."));
            ls.Add(new words("Льерн", "в нервюрном своде: короткое дополнительное ребро, связывающее другие нервюры, но само не связанное ни с пятами свода, ни с замковым камнем."));
            ls.Add(new words("Отравление", "это расстройство здоровья и смерть, вызванное попада-нием в организм яда и его химическим (токсическим) действием."));
            ls.Add(new words("Деревня", "небольшое крестьянское селение, один из видов населённых пунктов и адресных объектов. На начало XX века основным отличием"));
            ls.Add(new words("Опричнина", "В Русском государстве 1565-1572 годов личный удел царя Ивана Грозного, особая государственная территория, с войском и государственным аппаратом, доходы с которой поступали в государственную казну."));
            ls.Add(new words("Бал", "собрание многочисленного общества лиц обоих полов для танцев. Балы отличаются от обычных танцев или дискотеки повышенной торжественностью, более строгим этикетом и классическим набором танцев, следующих в заранее определённом порядке."));
            ls.Add(new words("Знамение", "знак, предзнаменование; явление природы, служащее по религиозным понятиям предзнаменованием чего-либо"));


            Console.WriteLine("Введите слово");
            string m = Console.ReadLine();
            int y = 0;


            foreach (words a in ls)
            {
                if (m.Length == a.word.Length)
                {
                    if (m == a.word)
                    {
                        Console.WriteLine(a.meaning);
                        break;
                    }
                    y = 0;
                    for (int i = 0; i < m.Length; i++)
                    {
                        if (m.ToLower()[i] != a.word.ToLower()[i])
                            y++;
                    }

                    if (y <= 2)
                        Console.WriteLine(a.word + " - " + a.meaning);
                }

            }


            Console.ReadKey();

        }
    }
}
